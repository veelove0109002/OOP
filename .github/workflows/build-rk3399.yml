name: build rk3399 (arm64)
on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    name: Build for RK3399 (ARM64)
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up docker image context
        run: ./scripts/ci_helper.sh prepare

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image (arm64)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT_DIR }}
          file: ${{ env.DOCKER_BUILD_CONTEXT_DIR }}/Dockerfile.build
          platforms: linux/arm64
          tags: ${{ env.DOCKER_BUILD_TAG }}
          push: false
          load: true

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Set up Golang
        uses: actions/setup-go@v6
        with:
          go-version: "^1.25.1"

      - name: Build frontend
        run: make frontend

      - name: Build application for RK3399 (ARM64, pure Go)
        env:
          # 覆盖默认的 armv7，强制生成 arm64 二进制；无 aarch64 工具链时使用 CGO_DISABLED
          GO_ARGS: "GOOS=linux GOARCH=arm64 CGO_ENABLED=0"
        run: ./scripts/ci_helper.sh make build_dev

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jetkvm-app-arm64
          path: bin/jetkvm_app